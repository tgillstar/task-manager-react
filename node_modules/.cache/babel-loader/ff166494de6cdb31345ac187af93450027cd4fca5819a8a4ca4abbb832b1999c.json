{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/storage/shared/GitProjects/task-manager-react/src/components/TaskManager.js\",\n  _s = $RefreshSig$();\n// src/components/TaskManager.js\nimport React, { useState, useEffect } from \"react\";\nimport { TaskFactory } from \"./TaskFactory\";\nimport { taskObserver } from \"./TaskObserver\";\nimport \"../styles/TaskManager.css\"; // Import styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskManager = () => {\n  _s();\n  const [tasks, setTasks] = useState([TaskFactory.createTask(\"Setup React App\", \"Initialize project\", \"Alice\"), TaskFactory.createTask(\"Design UI\", \"Create wireframes\", \"Bob\")]);\n\n  // Subscribe to task updates\n  useEffect(() => {\n    taskObserver.subscribe(setTasks);\n  }, []);\n  const handleDragStart = (e, id) => {\n    e.dataTransfer.setData(\"taskId\", id);\n  };\n  const handleDrop = (e, newStatus) => {\n    e.preventDefault();\n    const taskId = e.dataTransfer.getData(\"taskId\");\n    setTasks(prevTasks => prevTasks.map(task => task.id.toString() === taskId ? {\n      ...task,\n      status: newStatus\n    } : task));\n    taskObserver.notify(tasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-manager\",\n    children: [\"To Do\", \"In Progress\", \"Done\"].map(status => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-column\",\n      onDragOver: e => e.preventDefault(),\n      onDrop: e => handleDrop(e, status),\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), tasks.filter(task => task.status === status).map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-card\",\n        draggable: true,\n        onDragStart: e => handleDragStart(e, task.id),\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Owner: \", task.owner]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }, this))]\n    }, status, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskManager, \"G9Aa9J2LNbO2O7hOXB8bEhMvuLo=\");\n_c = TaskManager;\nexport default TaskManager;\nvar _c;\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"names":["React","useState","useEffect","TaskFactory","taskObserver","jsxDEV","_jsxDEV","TaskManager","_s","tasks","setTasks","createTask","subscribe","handleDragStart","e","id","dataTransfer","setData","handleDrop","newStatus","preventDefault","taskId","getData","prevTasks","map","task","toString","status","notify","className","children","onDragOver","onDrop","fileName","_jsxFileName","lineNumber","columnNumber","filter","draggable","onDragStart","title","description","owner","_c","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/storage/shared/GitProjects/task-manager-react/src/components/TaskManager.js"],"sourcesContent":["// src/components/TaskManager.js\nimport React, { useState, useEffect } from \"react\";\nimport { TaskFactory } from \"./TaskFactory\";\nimport { taskObserver } from \"./TaskObserver\";\nimport \"../styles/TaskManager.css\"; // Import styles\n\nconst TaskManager = () => {\n  const [tasks, setTasks] = useState([\n    TaskFactory.createTask(\"Setup React App\", \"Initialize project\", \"Alice\"),\n    TaskFactory.createTask(\"Design UI\", \"Create wireframes\", \"Bob\"),\n  ]);\n\n  // Subscribe to task updates\n  useEffect(() => {\n    taskObserver.subscribe(setTasks);\n  }, []);\n\n  const handleDragStart = (e, id) => {\n    e.dataTransfer.setData(\"taskId\", id);\n  };\n\n  const handleDrop = (e, newStatus) => {\n    e.preventDefault();\n    const taskId = e.dataTransfer.getData(\"taskId\");\n\n    setTasks((prevTasks) =>\n      prevTasks.map((task) =>\n        task.id.toString() === taskId ? { ...task, status: newStatus } : task\n      )\n    );\n\n    taskObserver.notify(tasks);\n  };\n\n  return (\n    <div className=\"task-manager\">\n      {[\"To Do\", \"In Progress\", \"Done\"].map((status) => (\n        <div\n          key={status}\n          className=\"task-column\"\n          onDragOver={(e) => e.preventDefault()}\n          onDrop={(e) => handleDrop(e, status)}\n        >\n          <h3>{status}</h3>\n          {tasks\n            .filter((task) => task.status === status)\n            .map((task) => (\n              <div\n                key={task.id}\n                className=\"task-card\"\n                draggable\n                onDragStart={(e) => handleDragStart(e, task.id)}\n              >\n                <h4>{task.title}</h4>\n                <p>{task.description}</p>\n                <small>Owner: {task.owner}</small>\n              </div>\n            ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default TaskManager;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}